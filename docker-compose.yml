version: '3.8'

services:
  # Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    command: start-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL for Keycloak
  postgres:
    image: postgres:15
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for sessions and caching
  redis:
    image: redis:7-alpine
    container_name: keyfront-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Optional: PostgreSQL for ABAC and audit logs
  keyfront-db:
    image: postgres:15
    container_name: keyfront-postgres
    environment:
      POSTGRES_DB: keyfront
      POSTGRES_USER: keyfront
      POSTGRES_PASSWORD: keyfront
    volumes:
      - keyfront_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keyfront"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Mock downstream API for testing
  mock-api:
    image: nginx:alpine
    container_name: keyfront-mock-api
    ports:
      - "4000:80"
    volumes:
      - ./mock-api/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./mock-api/api:/usr/share/nginx/html:ro
    depends_on:
      - redis

volumes:
  postgres_data:
  redis_data:
  keyfront_data:
